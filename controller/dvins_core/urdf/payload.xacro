<?xml version="1.0"?>
<!--
  Copyright 2015 Fadri Furrer, ASL, ETH Zurich, Switzerland
  Copyright 2015 Michael Burri, ASL, ETH Zurich, Switzerland
  Copyright 2015 Mina Kamel, ASL, ETH Zurich, Switzerland
  Copyright 2015 Janosch Nikolic, ASL, ETH Zurich, Switzerland
  Copyright 2015 Markus Achtelik, ASL, ETH Zurich, Switzerland

  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

  http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->

<robot xmlns:xacro="http://ros.org/wiki/xacro">
  <!-- Properties -->
  <xacro:property name="namespace" value="$(arg namespace)" />
  <xacro:property name="mass" value="$(arg payload_mass)" /> <!-- [kg] -->
  <xacro:property name="body_width" value="$(arg body_width)" /> <!-- [m] -->
  <xacro:property name="body_length" value="$(arg body_length)" /> <!-- [m] -->
  <xacro:property name="body_height" value="$(arg body_height)" /> <!-- [m] -->

  <!-- Property Blocks -->
  <xacro:property name="body_inertia">
	  <inertia ixx="${0.0833333 * mass * (body_width*body_width + body_height*body_height)}" ixy="0.0" ixz="0.0"
		        iyy="${0.0833333 * mass * (body_length*body_length + body_height*body_height)}" iyz="0.0"
					 izz="${0.0833333 * mass * (body_length*body_length + body_width*body_width)}" /> <!-- [kg·m^2] [kg·m^2] [kg·m^2] [kg·m^2] [kg·m^2] [kg·m^2] -->
  </xacro:property>
  <!-- Instantiate payload  -->
  <xacro:macro name="payload_macro"
    params="payload_namespace mass body_width body_length body_height mav_name1 mav_name2 mav_name3 *inertia">
		<link name="base_link"></link>
    <!--link name="firefly/rigid_cable1/rigid_cable_tail_link" > </link-->

		<link name="base_link_inertia">
	  	<inertial>
      	<mass value="${mass}" />  <!-- [kg] -->
      	<origin xyz="0 0 0" />
      	<xacro:insert_block name="inertia" />
    	</inertial>

    	<visual>
      	<origin xyz="0 0 0" rpy="0 0 0" />
	    	<geometry>
		    	<box size="${body_width} ${body_length} ${body_height}" />  <!-- [m] [m] [m] -->
		  	</geometry>
			</visual>
										
			<collision>
		  	<origin xyz="0 0 0" rpy="0 0 0" />
		  	<geometry>
		    	<box size="${body_width} ${body_length} ${body_height}" /> <!-- [m] [m] [m] -->
		  	</geometry>
			</collision>
		</link>

		<xacro:binding_link_macro
			name="binding_link1">
     	<xacro:insert_block name="inertia" />
		</xacro:binding_link_macro>

		<xacro:binding_link_macro
			name="binding_link2">
     	<xacro:insert_block name="inertia" />
		</xacro:binding_link_macro>

		<xacro:binding_link_macro
			name="binding_link3">
     	<xacro:insert_block name="inertia" />
		</xacro:binding_link_macro>

  	<joint name="base_joint" type="fixed">
	  	<origin xyz="0 0 0" rpy="0 0 0" />
	  	<parent link="base_link" />
	  	<child link="base_link_inertia" />
		</joint>
  	<joint name="binding_joint1" type="continuous">
	  	<origin xyz="${body_width/2} 0 ${body_height/2}" rpy="0 0 0" />
	  	<parent link="base_link" />
	  	<child link="binding_link1" />
			<axis xyz="1 0 0" />
		</joint>
  	<joint name="binding_joint2" type="continuous">
	  	<origin xyz="${-body_width/2} 0 ${body_height/2}" rpy="0 0 0" />
	  	<parent link="base_link" />
	  	<child link="binding_link2" />
			<axis xyz="1 0 0" />
		</joint>
  	<joint name="binding_joint3" type="continuous">
	  	<origin xyz="0 0 ${body_height/2}" rpy="0 0 0" />
	  	<parent link="base_link" />
	  	<child link="binding_link3" />
			<axis xyz="1 0 0" />
		</joint>
    <gazebo>
      <plugin filename="libgazebo_cable_plugin.so" name="cable_model">
        <mavName1>${mav_name1}</mavName1>
        <mavName2>${mav_name2}</mavName2>
        <mavName3>${mav_name3}</mavName3>
      </plugin>
    </gazebo>
	<gazebo reference="base_link">
    <gravity>true</gravity>
    <sensor name="imu_sensor_load" type="imu">
      <always_on>true</always_on>
      <update_rate>100</update_rate>
      <visualize>true</visualize>
      <topic>load</topic>
      <plugin filename="libgazebo_ros_imu_sensor.so" name="imu_plugin_load">
        <topicName>imu_load</topicName>
        <bodyName>load_link</bodyName>
        <updateRateHZ>100.0</updateRateHZ>
        <gaussianNoise>0.0</gaussianNoise>
        <xyzOffset>0 0 0</xyzOffset>
        <rpyOffset>0 0 0</rpyOffset>
        <frameName>load_link</frameName>
      </plugin>
      <pose>0 0 0 0 0 0</pose>
    </sensor>
  </gazebo>
  </xacro:macro>

  <!--binding link macro-->
  <xacro:macro name="binding_link_macro"
		params="name *inertia">
		<link name="${name}">
	  	<inertial>
      	<mass value="0.01" />  <!-- [kg] -->
      	<origin xyz="0 0 0" />
      	<xacro:insert_block name="inertia" />
    	</inertial>

    	<visual>
      	<origin xyz="0 0 0" rpy="0 0 0" />
	    	<geometry>
	    	<box size="0.01 0.01 0.01" />  <!-- [m] [m] [m] -->
		  	</geometry>
			</visual>
										
			<collision>
		  	<origin xyz="0 0 0" rpy="0 0 0" />
		  	<geometry>
	    	<box size="0.01 0.01 0.01" /> <!-- [m] [m] [m] -->
		  	</geometry>
			</collision>
		</link>
	</xacro:macro>	

  <xacro:include filename="$(find dvins_core)/urdf/component_snippets.xacro" />
 	<xacro:payload_macro
		payload_namespace="${namespace}"
		mass="${mass}"
		body_width="${body_width}"
		body_length="${body_length}"
		body_height="${body_height}"
		mav_name1="$(arg mav_name1)"
		mav_name2="$(arg mav_name2)"
		mav_name3="$(arg mav_name3)"
	 	>
    <xacro:insert_block name="body_inertia" />
	</xacro:payload_macro>

  <!-- Mount a generic odometry sensor without odometry map (working everywhere). -->
  <xacro:odometry_plugin_macro
    namespace="${namespace}"
    odometry_sensor_suffix="2"
    parent_link="base_link"
    pose_topic="odometry_sensor2/pose"
    pose_with_covariance_topic="odometry_sensor2/pose_with_covariance"
    position_topic="odometry_sensor2/position"
    transform_topic="odometry_sensor2/transform"
    odometry_topic="odometry_sensor2/odometry"
    parent_frame_id="world"
    child_frame_id="${namespace}/odometry_sensor2"
    mass_odometry_sensor="0.00001"
    measurement_divisor="1"
    measurement_delay="0"
    unknown_delay="0.0"
    noise_normal_position="0 0 0"
    noise_normal_quaternion="0 0 0"
    noise_normal_linear_velocity="0 0 0"
    noise_normal_angular_velocity="0 0 0"
    noise_uniform_position="0 0 0"
    noise_uniform_quaternion="0 0 0"
    noise_uniform_linear_velocity="0 0 0"
    noise_uniform_angular_velocity="0 0 0"
    enable_odometry_map="false"
    odometry_map=""
    image_scale=""
  >
    <inertia ixx="0.00001" ixy="0.0" ixz="0.0" iyy="0.00001" iyz="0.0" izz="0.00001" /> <!-- [kg m^2] [kg m^2] [kg m^2] [kg m^2] [kg m^2] [kg m^2] -->
    <origin xyz="0.0 0.0 0.0" rpy="0.0 0.0 0.0" />
  </xacro:odometry_plugin_macro>
</robot>
